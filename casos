// Caso teste 6
		long start6 = System.nanoTime();
		GenericTree arv6 = new GenericTree("Epeus");

		// Inserção dos nós para o caso teste 6
		arv6.insert("Epeus", "Psyria");
		arv6.insert("Psyria", "Eperitus");
		arv6.insert("Epeus", "Antinous");
		arv6.insert("Psyria", "Hylax");
		arv6.insert("Eperitus", "Maera");
		arv6.insert("Psyria", "Tantalus");
		arv6.insert("Psyria", "Neleus");
		arv6.insert("Hylax", "Aphrodite");
		arv6.insert("Neleus", "Lesbos");
		arv6.insert("Maera", "Ortilochus");
		arv6.insert("Antinous", "Dymas");
		arv6.insert("Psyria", "Anticleia");
		arv6.insert("Tantalus", "Ponteus");
		arv6.insert("Eperitus", "Lede");
		arv6.insert("Hylax", "Jason");
		arv6.insert("Neleus", "Dulichium");
		arv6.insert("Ortilochus", "Hippotas");
		arv6.insert("Hippotas", "Eurypylus");
		arv6.insert("Psyria", "Atreidae");
		arv6.insert("Eurypylus", "Taphos");

		System.out.println("Caso teste 6:");
		System.out.println();
		System.out.println(
				"O ancestral mais próximo entre Epeus e Tantalus é " + arv6.ancestralComum("Antinous", "Jason"));
		System.out.println();
		System.out.println("A altura da árvore é " + arv6.heightNode());
		System.out.println();
		System.out.println("Existem " + arv6.numChild("Psyria") + " descendentes de Psyria");
		System.out.println();
		System.out.println("Caminho mais longo composto por vogais: " + arv6.maiorCaminhoV());
		System.out.println();
		System.out.println("Caminho mais longo composto por Consoantes: " + arv6.maiorCaminhoC());
		System.out.println();
		long end6 = System.nanoTime();
		long sub5 = end5 + start5;
		System.out.println("Tempo de execução do teste: " + ((end6 - start6) - sub5) + "ns");

		// Caso teste 7
		long start7 = System.nanoTime();
		GenericTree arv7 = new GenericTree("Antiphates");

		// Inserção dos nós para o caso teste 7
		arv7.insert("Antiphates", "Anticlus");
		arv7.insert("Anticlus", "Lemnos");
		arv7.insert("Anticlus", "Polypheides");
		arv7.insert("Lemnos", "Eurynome");
		arv7.insert("Anticlus", "Atreides");
		arv7.insert("Lemnos", "Diocles");
		arv7.insert("Eurynome", "Phemius");
		arv7.insert("Eurynome", "Maron");
		arv7.insert("Maron", "Ariadne");
		arv7.insert("Atreides", "Minos");
		arv7.insert("Minos", "Orestes");
		arv7.insert("Lemnos", "Ilios");
		arv7.insert("Orestes", "Cyprus");
		arv7.insert("Cyprus", "Polites");
		arv7.insert("Ilios", "Eurymachus");
		arv7.insert("Antiphates", "Hermione");
		arv7.insert("Atreides", "Phthia");
		arv7.insert("Ilios", "Anchialus");
		arv7.insert("Polypheides", "Thoosa");
		arv7.insert("Anticlus", "Iasus");
		arv7.insert("Phemius", "Oedipodes");
		arv7.insert("Thoosa", "Temesa");
		arv7.insert("Diocles", "Ino");
		arv7.insert("Polites", "Eurymedon");
		arv7.insert("Atreides", "Lamos");
		arv7.insert("Iasus", "Agelaus");
		arv7.insert("Iasus", "Hypereia");
		arv7.insert("Maron", "Euryades");
		arv7.insert("Ariadne", "Cronides");
		arv7.insert("Polypheides", "Amphion");
		arv7.insert("Atreides", "Mycene");
		arv7.insert("Hermione", "Amnisus");
		arv7.insert("Anticlus", "Polytherses");
		arv7.insert("Hypereia", "Oechalia");
		arv7.insert("Cronides", "Amythaon");
		arv7.insert("Mycene", "Taygetus");
		arv7.insert("Maron", "Epeus");
		arv7.insert("Euryades", "Ithacans");
		arv7.insert("Phemius", "Iphimedeia");
		arv7.insert("Iasus", "Cythera");

		System.out.println("Caso teste 7:");
		System.out.println();
		System.out.println(
				"O ancestral mais próximo entre Antiphates e Lemnos é " + arv7.ancestralComum("Phemius", "Epeus"));
		System.out.println();
		System.out.println("A altura da árvore é " + arv7.heightNode());
		System.out.println();
		System.out.println("Existem " + arv7.numChild("Anticlus") + " descendentes de Anticlus");
		System.out.println();
		System.out.println("Caminho mais longo composto por vogais: " + arv7.maiorCaminhoV());
		System.out.println();
		System.out.println("Caminho mais longo composto por Consoantes: " + arv7.maiorCaminhoC());
		System.out.println();
		long end7 = System.nanoTime();
		long sub6 = start6 + end6;
		System.out.println("Tempo de execução do teste: " + ((end7 - start7) - sub6) + "ns");

		// Caso teste 10
		long start10 = System.nanoTime();
		GenericTree arv10 = new GenericTree("Phthia");

		// Inserção dos nós para o caso teste 10
		arv10.insert("Phthia", "Lacedaemon");
		arv10.insert("Phthia", "Chalcis");
		arv10.insert("Lacedaemon", "Phylacus");
		arv10.insert("Lacedaemon", "Taphos");
		arv10.insert("Lacedaemon", "Aeacus");
		arv10.insert("Phylacus", "Alcinous");
		arv10.insert("Alcinous", "Epeius");
		arv10.insert("Phthia", "Hermes");
		arv10.insert("Chalcis", "Acroneus");
		arv10.insert("Acroneus", "Peirithous");
		arv10.insert("Peirithous", "Aia");
		arv10.insert("Aia", "Polyneus");
		arv10.insert("Epeius", "Echephron");
		arv10.insert("Chalcis", "Oechalia");
		arv10.insert("Echephron", "Myrmidons");
		arv10.insert("Hermes", "Lampetie");
		arv10.insert("Lacedaemon", "Odysseus");
		arv10.insert("Chalcis", "Mulius");
		arv10.insert("Myrmidons", "Halius");
		arv10.insert("Alcinous", "Marathon");
		arv10.insert("Lampetie", "Lotophagi");
		arv10.insert("Echephron", "Euryades");
		arv10.insert("Odysseus", "Dolius");
		arv10.insert("Myrmidons", "Theban");
		arv10.insert("Oechalia", "Ithacans");
		arv10.insert("Chalcis", "Phaeacia");
		arv10.insert("Dolius", "Heracles");
		arv10.insert("Hermes", "Telephus");
		arv10.insert("Taphos", "Crete");
		arv10.insert("Phylacus", "Amphiaraus");
		arv10.insert("Crete", "Tithonus");
		arv10.insert("Theban", "Arnaeus");
		arv10.insert("Alcinous", "Amnisus");
		arv10.insert("Echephron", "Aegisthus");
		arv10.insert("Aeacus", "Argive");
		arv10.insert("Lotophagi", "Dmetor");
		arv10.insert("Taphos", "Naubolus");
		arv10.insert("Lampetie", "Clytius");
		arv10.insert("Dolius", "Eurymedon");
		arv10.insert("Odysseus", "Otus");
		arv10.insert("Odysseus", "Irus");
		arv10.insert("Oechalia", "Peisenor");
		arv10.insert("Amnisus", "Zeus");
		arv10.insert("Dmetor", "Megara");
		arv10.insert("Lacedaemon", "Libya");
		arv10.insert("Aegisthus", "Neaera");
		arv10.insert("Lacedaemon", "Ctimene");
		arv10.insert("Chalcis", "Laestrygonia");
		arv10.insert("Crete", "Iardanus");
		arv10.insert("Oechalia", "Anticleia");
		arv10.insert("Polyneus", "Ethiopia");
		arv10.insert("Iardanus", "Orsilochus");
		arv10.insert("Oechalia", "Cicones");
		arv10.insert("Telephus", "Asphalion");
		arv10.insert("Mulius", "Agamemnon");
		arv10.insert("Cicones", "Polyphemus");
		arv10.insert("Libya", "Leiodes");
		arv10.insert("Orsilochus", "Rhexenor");
		arv10.insert("Mulius", "Dulichium");
		arv10.insert("Neaera", "Mimas");
		arv10.insert("Phylacus", "Epeus");
		arv10.insert("Telephus", "Castor");
		arv10.insert("Chalcis", "Pheres");
		arv10.insert("Euryades", "Neion");
		arv10.insert("Alcinous", "Dionysus");
		arv10.insert("Heracles", "Salmoneus");
		arv10.insert("Clytius", "Hebe");
		arv10.insert("Ethiopia", "Eurymedusa");
		arv10.insert("Irus", "Boethous");
		arv10.insert("Zeus", "Atreus");
		arv10.insert("Crete", "Cytherea");
		arv10.insert("Dionysus", "Clytoneus");
		arv10.insert("Orsilochus", "Sisyphus");
		arv10.insert("Acroneus", "Ortygia");
		arv10.insert("Clytoneus", "Pyriphlegethon");
		arv10.insert("Orsilochus", "Melaneus");
		arv10.insert("Crete", "Phrontis");
		arv10.insert("Orsilochus", "Amphithea");
		arv10.insert("Eurymedusa", "Ilios");
		arv10.insert("Leiodes", "Sidon");
		arv10.insert("Crete", "Hellas");
		arv10.insert("Marathon", "Demoptolemus");
		arv10.insert("Naubolus", "Diomede");
		arv10.insert("Odysseus", "Ilus");
		arv10.insert("Lacedaemon", "Amphimedon");
		arv10.insert("Ortygia", "Iphicles");
		arv10.insert("Hermes", "Terpes");
		arv10.insert("Crete", "Erymanthus");
		arv10.insert("Crete", "Mastor");
		arv10.insert("Ortygia", "Calypso");
		arv10.insert("Boethous", "Ithaca");
		arv10.insert("Polyphemus", "Iphthime");
		arv10.insert("Cicones", "Iasion");
		arv10.insert("Boethous", "Mesaulius");
		arv10.insert("Amphimedon", "Arete");
		arv10.insert("Ilus", "Thoas");
		arv10.insert("Phrontis", "Pylos");
		arv10.insert("Ithaca", "Deucalion");
		arv10.insert("Argive", "Mantius");
		arv10.insert("Otus", "Ortilochus");
		arv10.insert("Naubolus", "Lede");
		arv10.insert("Iphthime", "Lamos");
		arv10.insert("Aeacus", "Elatus");
		arv10.insert("Ilios", "Proreus");
		arv10.insert("Amphimedon", "Chloris");
		arv10.insert("Calypso", "Arethusa");
		arv10.insert("Phthia", "Aegyptus");
		arv10.insert("Odysseus", "Dymas");
		arv10.insert("Erymanthus", "Ino");
		arv10.insert("Hebe", "Anticlus");
		arv10.insert("Lacedaemon", "Damastor");
		arv10.insert("Alcinous", "Euboea");
		arv10.insert("Polyphemus", "Sicania");
		arv10.insert("Leiodes", "Themis");
		arv10.insert("Orsilochus", "Sunium");
		arv10.insert("Crete", "Phaestus");
		arv10.insert("Naubolus", "Achaia");
		arv10.insert("Clytoneus", "Argos");
		arv10.insert("Marathon", "Orestes");
		arv10.insert("Theban", "Messene");
		arv10.insert("Sicania", "Phoenicia");
		arv10.insert("Sisyphus", "Asteris");
		arv10.insert("Demoptolemus", "Styx");
		arv10.insert("Mulius", "Laertes");
		arv10.insert("Irus", "Telepylos");
		arv10.insert("Ilios", "Noemon");
		arv10.insert("Ithaca", "Aeetes");
		arv10.insert("Halius", "Polypemon");
		arv10.insert("Argive", "Gerenia");
		arv10.insert("Iphicles", "Erembi");
		arv10.insert("Elatus", "Eupeithes");
		arv10.insert("Themis", "Eurytus");
		arv10.insert("Dionysus", "Itylus");
		arv10.insert("Elatus", "Amphinomus");
		arv10.insert("Amphithea", "Antinous");
		arv10.insert("Dionysus", "Hyperion");
		arv10.insert("Halius", "Eurypylus");
		arv10.insert("Lacedaemon", "Muses");
		arv10.insert("Eurytus", "Hermione");
		arv10.insert("Arethusa", "Eriphyle");
		arv10.insert("Lacedaemon", "Eurytion");
		arv10.insert("Asteris", "Apollo");
		arv10.insert("Anticleia", "Alcandre");
		arv10.insert("Rhexenor", "Ponteus");
		arv10.insert("Epeus", "Aethon");
		arv10.insert("Argive", "Mentes");
		arv10.insert("Amphiaraus", "Antilochus");
		arv10.insert("Acroneus", "Ogygia");
		arv10.insert("Dulichium", "Argives");
		arv10.insert("Alcinous", "Charybdis");
		arv10.insert("Aia", "Chios");
		arv10.insert("Iasion", "Nisus");
		arv10.insert("Leiodes", "Telemus");
		arv10.insert("Phylacus", "Ephyra");
		arv10.insert("Euboea", "Memnon");
		arv10.insert("Orestes", "Phorcys");
		arv10.insert("Ilus", "Thyestes");
		arv10.insert("Orestes", "Eteoneus");
		arv10.insert("Phaestus", "Leocritus");
		arv10.insert("Anticleia", "Thebes");
		arv10.insert("Echephron", "Eperitus");
		arv10.insert("Eurytion", "Polyctor");
		arv10.insert("Phylacus", "Aretus");
		arv10.insert("Chios", "Nericus");
		arv10.insert("Antinous", "Actor");
		arv10.insert("Mastor", "Achilles");
		arv10.insert("Demoptolemus", "Mentor");
		arv10.insert("Laertes", "Alybas");
		arv10.insert("Ethiopia", "Mermerus");
		arv10.insert("Mentor", "Acheron");
		arv10.insert("Phoenicia", "Demeter");
		arv10.insert("Phylacus", "Pharos");
		arv10.insert("Pheres", "Eumaeus");
		arv10.insert("Leocritus", "Agelaus");
		arv10.insert("Boethous", "Taygetus");
		arv10.insert("Ctimene", "Aeolus");
		arv10.insert("Eurymedusa", "Philoetius");
		arv10.insert("Eurymedusa", "Poseidon");
		arv10.insert("Theban", "Ismarus");
		arv10.insert("Achilles", "Theoclymenus");
		arv10.insert("Iphicles", "Temesa");
		arv10.insert("Erembi", "Philoctetes");
		arv10.insert("Aeacus", "Amphilochus");
		arv10.insert("Phorcys", "Pandareus");
		arv10.insert("Amphilochus", "Leucothea");
		arv10.insert("Thebes", "Periclymenus");
		arv10.insert("Phorcys", "Zethus");
		arv10.insert("Aia", "Tenedos");
		arv10.insert("Dionysus", "Aperaea");
		arv10.insert("Hellas", "Pheidon");
		arv10.insert("Tithonus", "Artacia");
		arv10.insert("Echephron", "Eurynome");
		arv10.insert("Lampetie", "Amphitryon");
		arv10.insert("Peisenor", "Oedipodes");
		arv10.insert("Odysseus", "Phaethon");
		arv10.insert("Peirithous", "Polites");
		arv10.insert("Thebes", "Hephaestus");
		arv10.insert("Lamos", "Orchomenus");
		arv10.insert("Eumaeus", "Cassandra");
		arv10.insert("Melaneus", "Tantalus");

		System.out.println("Caso teste 10:");
		System.out.println();
		System.out.println(
				"O ancestral mais próximo entre Phthia e Lacedaemon é " + arv10.ancestralComum("Achilles", "Chloris"));
		System.out.println();
		System.out.println("A altura da árvore é " + arv10.heightNode());
		System.out.println();
		System.out.println("Existem " + arv10.numChild("Lacedaemon") + " descendentes de Lacedaemon");
		System.out.println();
		System.out.println("Caminho mais longo composto por vogais: " + arv10.maiorCaminhoV());
		System.out.println();
		System.out.println("Caminho mais longo composto por Consoantes: " + arv10.maiorCaminhoC());
		System.out.println();
		long end10 = System.nanoTime();
		long sub7 = start7 + end7;
		System.out.println("Tempo de execução do teste: " + ((end10 - start10) - sub7) + "ns");
	}
}
